name: CICD

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: checkoutstage
      uses: actions/checkout@v4
      with:
        path: master
        
    - name: Set up-Go env
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.2'
        
    - name: Display Go Version
      run: go version
    - name: Debug Directory
      run: pwd && ls -la

    - name: Build Application
      run: |
         ls -ltr
         go build -o go-web

    - name: Run Tests
      run: go test ./...
      
  code-quality: 
     runs-on: ubuntu-latest
     
     steps:
     - name: checkoutstage
       uses: actions/checkout@v4
     - name: Run golangci-lint
       uses: golangci/golangci-lint-action@v6
       with:
         version: v1.56.2

  imagebuild:
      runs-on: ubuntu-latest


      steps:
      - name: checkoutstage
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ Secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ Secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: goapp
          IMAGE_TAG: github.run_id
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
 